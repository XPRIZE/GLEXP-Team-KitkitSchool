apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.enuma.xprize"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 23
        versionName "1.1.20170925.en"

//        externalNativeBuild {
//            ndkBuild {
//                targets 'cocos2dcpp'
//                arguments 'NDK_MODULE_PATH=../../cocos2d:../../cocos2d/cocos:../../cocos2d/external:../../cocos2d/cocos/prebuilt-mk::../../cocos2d/extensions'
//                arguments '-j' + Runtime.runtime.availableProcessors()
//                arguments 'NDK_TOOLCHAIN_VERSION=4.9'
//                abiFilters 'armeabi'
//            }
//        }
//
//        ndk {
//            abiFilters 'armeabi'
//        }
    }

//    externalNativeBuild {
//        ndkBuild {
//            path "jni/Android.mk"
//        }
//    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    sourceSets.release {
        manifest.srcFile "release/AndroidManifest.xml"
    }
    sourceSets.debug {
        manifest.srcFile "debug/AndroidManifest.xml"
    }

    signingConfigs {
        debug {
            storeFile file('../debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
//       release {
//            if (project.hasProperty("RELEASE_STORE_FILE")) {
//                storeFile file(RELEASE_STORE_FILE)
//                storePassword RELEASE_STORE_PASSWORD
//                keyAlias RELEASE_KEY_ALIAS
//                keyPassword RELEASE_KEY_PASSWORD
//            }
//        }
    }
    productFlavors {
        english {

        }
        swahili {

        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            jniDebuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            if (project.hasProperty("RELEASE_STORE_FILE")) {
//                signingConfig signingConfigs.release
//            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
    englishCompile project(path: ':kitkitlogger', configuration: 'englishRelease')
    swahiliCompile project(path: ':kitkitlogger', configuration: 'swahiliRelease')
}
